<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="995px" preserveAspectRatio="none" style="width:666px;height:995px;background:#00000000;" version="1.1" viewBox="0 0 666 995" width="666px" zoomAndPan="magnify"><defs><filter height="300%" id="fr88n0k768tub" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[cc7b86182a2d491cea4d0231be410c3d]
class Stats--><rect codeLine="6" fill="#FEFECE" filter="url(#fr88n0k768tub)" height="890.0801" id="Stats" style="stroke:#FF0000;stroke-width:1.5;" width="645" x="7" y="91"/><ellipse cx="311.75" cy="107" fill="#ADD1B2" rx="11" ry="11" style="stroke:#FF0000;stroke-width:1.0;"/><path d="M314.2231,113.1431 Q313.6421,113.4419 313.0029,113.5913 Q312.3638,113.7407 311.6582,113.7407 Q309.1514,113.7407 307.8315,112.0889 Q306.5117,110.437 306.5117,107.3159 Q306.5117,104.1865 307.8315,102.5347 Q309.1514,100.8828 311.6582,100.8828 Q312.3638,100.8828 313.0112,101.0322 Q313.6587,101.1816 314.2231,101.4805 L314.2231,104.2031 Q313.5923,103.6221 312.9988,103.3523 Q312.4053,103.0825 311.7744,103.0825 Q310.4297,103.0825 309.7449,104.1492 Q309.0601,105.2158 309.0601,107.3159 Q309.0601,109.4077 309.7449,110.4744 Q310.4297,111.541 311.7744,111.541 Q312.4053,111.541 312.9988,111.2712 Q313.5923,111.0015 314.2231,110.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="27" x="332.25" y="111.5352">Stats</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="8" x2="651" y1="123" y2="123"/><ellipse cx="18" cy="134" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="27" y="137.6348">constructor : Function</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="143.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="138" x="27" y="150.5898">avgSGClearTime : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="156.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="125" x="27" y="163.5449">avgSGFillTime : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="169.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="143" x="27" y="176.5">avgSGQueryTime : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="182.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="189.4551">avgSGUpdateTime : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="195.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="142" x="27" y="202.4102">CANVAS_HEIGHT : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="208.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="137" x="27" y="215.3652">CANVAS_WIDTH : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="221.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="178" x="27" y="228.3203">ctx : CanvasRenderingContext2D</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="234.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="187" x="27" y="241.2754">graphChoices : HTMLSelectElement</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="247.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="121" x="27" y="254.2305">NUM_POINTS : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="260.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="143" x="27" y="267.1855">prevClearTimes : number[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="273.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="130" x="27" y="280.1406">prevFillTimes : number[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="286.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="100" x="27" y="293.0957">prevfps : number[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="299.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="306.0508">prevQueryTimes : number[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="312.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="153" x="27" y="319.0059">prevUpdateTimes : number[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="325.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="133" x="27" y="331.9609">SGClearTimes : number[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="338.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="120" x="27" y="344.916">SGFillTimes : number[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="351.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="138" x="27" y="357.8711">SGQueryTimes : number[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="364.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="143" x="27" y="370.8262">SGUpdateTimes : number[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="377.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="141" x="27" y="383.7813">statsDiv : HTMLDivElement</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="8" x2="651" y1="390.1016" y2="390.1016"/><ellipse cx="18" cy="401.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="222" x="27" y="404.7363">assign&lt;T, U&gt;(target: T, source: U) : T &amp; U</text><ellipse cx="18" cy="414.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="326" x="27" y="417.6914">assign&lt;T, U, V&gt;(target: T, source1: U, source2: V) : T &amp; U &amp; V</text><ellipse cx="18" cy="427.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="429" x="27" y="430.6465">assign&lt;T, U, V, W&gt;(target: T, source1: U, source2: V, source3: W) : T &amp; U &amp; V &amp; W</text><ellipse cx="18" cy="439.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="224" x="27" y="443.6016">assign(target: object, sources: any[]) : any</text><ellipse cx="18" cy="452.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="115" x="27" y="456.5566">create(o: object) : any</text><ellipse cx="18" cy="465.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="408" x="27" y="469.5117">create(o: object, properties: PropertyDescriptorMap &amp; ThisType&lt;any&gt;) : any</text><ellipse cx="18" cy="478.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="450" x="27" y="482.4668">defineProperties&lt;T&gt;(o: T, properties: PropertyDescriptorMap &amp; ThisType&lt;any&gt;) : T</text><ellipse cx="18" cy="491.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="499" x="27" y="495.4219">defineProperty&lt;T&gt;(o: T, p: PropertyKey, attributes: PropertyDescriptor &amp; ThisType&lt;any&gt;) : T</text><ellipse cx="18" cy="504.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="258" x="27" y="508.377">drawChart(param: number[], color: string) : void</text><ellipse cx="18" cy="517.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="102" x="27" y="521.332">drawCharts() : void</text><ellipse cx="18" cy="530.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="274" x="27" y="534.2871">entries&lt;T&gt;(o: Object | ArrayLike&lt;T&gt;) : [string, T][]</text><ellipse cx="18" cy="543.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="175" x="27" y="547.2422">entries(o: Object) : [string, any][]</text><ellipse cx="18" cy="556.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="167" x="27" y="560.1973">freeze&lt;T&gt;(a: T[]) : readonly T[]</text><ellipse cx="18" cy="569.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="99" x="27" y="573.1523">freeze&lt;T&gt;(f: T) : T</text><ellipse cx="18" cy="582.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="183" x="27" y="586.1074">freeze&lt;T, U&gt;(o: T) : Readonly&lt;T&gt;</text><ellipse cx="18" cy="595.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="169" x="27" y="599.0625">freeze&lt;T&gt;(o: T) : Readonly&lt;T&gt;</text><ellipse cx="18" cy="608.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="377" x="27" y="612.0176">fromEntries&lt;T&gt;(entries: Iterable&lt;readonly [PropertyKey, T]&gt;) : Object</text><ellipse cx="18" cy="621.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="277" x="27" y="624.9727">fromEntries(entries: Iterable&lt;readonly any[]&gt;) : any</text><ellipse cx="18" cy="634.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="380" x="27" y="637.9277">getOwnPropertyDescriptor(o: any, p: PropertyKey) : PropertyDescriptor</text><ellipse cx="18" cy="647.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="619" x="27" y="650.8828">getOwnPropertyDescriptors&lt;T&gt;(o: T) : { [P in string | number | symbol]: TypedPropertyDescriptor&lt;T[P]&gt; } &amp; Object</text><ellipse cx="18" cy="660.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="212" x="27" y="663.8379">getOwnPropertyNames(o: any) : string[]</text><ellipse cx="18" cy="673.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="228" x="27" y="676.793">getOwnPropertySymbols(o: any) : symbol[]</text><ellipse cx="18" cy="686.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="150" x="27" y="689.748">getPrototypeOf(o: any) : any</text><ellipse cx="18" cy="699.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="702.7031">hasOwnProperty(v: PropertyKey) : boolean</text><ellipse cx="18" cy="712.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="83" x="27" y="715.6582">initStats() : void</text><ellipse cx="18" cy="724.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="195" x="27" y="728.6133">is(value1: any, value2: any) : boolean</text><ellipse cx="18" cy="737.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="156" x="27" y="741.5684">isExtensible(o: any) : boolean</text><ellipse cx="18" cy="750.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="138" x="27" y="754.5234">isFrozen(o: any) : boolean</text><ellipse cx="18" cy="763.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="27" y="767.4785">isPrototypeOf(v: Object) : boolean</text><ellipse cx="18" cy="776.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="135" x="27" y="780.4336">isSealed(o: any) : boolean</text><ellipse cx="18" cy="789.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="127" x="27" y="793.3887">keys(o: object) : string[]</text><ellipse cx="18" cy="802.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="129" x="27" y="806.3438">keys(o: Object) : string[]</text><ellipse cx="18" cy="815.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="167" x="27" y="819.2988">log(key: string, data: any) : void</text><ellipse cx="18" cy="828.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="169" x="27" y="832.2539">preventExtensions&lt;T&gt;(o: T) : T</text><ellipse cx="18" cy="841.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="845.209">propertyIsEnumerable(v: PropertyKey) : boolean</text><ellipse cx="18" cy="854.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="76" x="27" y="858.1641">render() : void</text><ellipse cx="18" cy="867.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="90" x="27" y="871.1191">seal&lt;T&gt;(o: T) : T</text><ellipse cx="18" cy="880.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="224" x="27" y="884.0742">setPrototypeOf(o: any, proto: object) : any</text><ellipse cx="18" cy="893.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="897.0293">toLocaleString() : string</text><ellipse cx="18" cy="906.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="27" y="909.9844">toString() : string</text><ellipse cx="18" cy="919.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="160" x="27" y="922.9395">updateFPS(fps: number) : void</text><ellipse cx="18" cy="932.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="117" x="27" y="935.8945">updateSGStats() : void</text><ellipse cx="18" cy="945.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="27" y="948.8496">valueOf() : Object</text><ellipse cx="18" cy="958.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="225" x="27" y="961.8047">values&lt;T&gt;(o: Object | ArrayLike&lt;T&gt;) : T[]</text><ellipse cx="18" cy="971.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="126" x="27" y="974.7598">values(o: Object) : any[]</text><!--MD5=[aa7f586532e18719e6cefa70fc650583]
class Object--><rect codeLine="73" fill="#FEFECE" filter="url(#fr88n0k768tub)" height="24.1328" id="Object" style="stroke:#FF0000;stroke-width:1.5;" width="44" x="307.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="38" x="310.5" y="23.6016">Object</text><!--MD5=[5ccc27c9b4fbab71042831ddb90f16f8]
reverse link Object to Stats--><path codeLine="75" d="M329.5,51.4 C329.5,62.29 329.5,75.65 329.5,90.89 " fill="none" id="Object-backto-Stats" style="stroke:#FF0000;stroke-width:1.0;"/><polygon fill="none" points="322.5,51.24,329.5,31.24,336.5,51.24,322.5,51.24" style="stroke:#FF0000;stroke-width:1.0;"/><!--MD5=[42e9092dcb5dab8fef311791386a4213]
@startuml
skinparam ClassArrowColor #ff0000
skinparam ClassBorderColor #ff0000
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Stats" {
    +constructor : Function
    {static} -avgSGClearTime : number
    {static} -avgSGFillTime : number
    {static} -avgSGQueryTime : number
    {static} -avgSGUpdateTime : number
    {static} -CANVAS_HEIGHT : number
    {static} -CANVAS_WIDTH : number
    {static} -ctx : CanvasRenderingContext2D
    {static} -graphChoices : HTMLSelectElement
    {static} -NUM_POINTS : number
    {static} -prevClearTimes : number[]
    {static} -prevFillTimes : number[]
    {static} -prevfps : number[]
    {static} -prevQueryTimes : number[]
    {static} -prevUpdateTimes : number[]
    {static} -SGClearTimes : number[]
    {static} -SGFillTimes : number[]
    {static} -SGQueryTimes : number[]
    {static} -SGUpdateTimes : number[]
    {static} -statsDiv : HTMLDivElement
    {static} +assign<T, U>(target: T, source: U) : T & U
    {static} +assign<T, U, V>(target: T, source1: U, source2: V) : T & U & V
    {static} +assign<T, U, V, W>(target: T, source1: U, source2: V, source3: W) : T & U & V & W
    {static} +assign(target: object, sources: any[]) : any
    {static} +create(o: object) : any
    {static} +create(o: object, properties: PropertyDescriptorMap & ThisType<any>) : any
    {static} +defineProperties<T>(o: T, properties: PropertyDescriptorMap & ThisType<any>) : T
    {static} +defineProperty<T>(o: T, p: PropertyKey, attributes: PropertyDescriptor & ThisType<any>) : T
    {static} +drawChart(param: number[], color: string) : void
    {static} +drawCharts() : void
    {static} +entries<T>(o: Object | ArrayLike<T>) : [string, T][]
    {static} +entries(o: Object) : [string, any][]
    {static} +freeze<T>(a: T[]) : readonly T[]
    {static} +freeze<T>(f: T) : T
    {static} +freeze<T, U>(o: T) : Readonly<T>
    {static} +freeze<T>(o: T) : Readonly<T>
    {static} +fromEntries<T>(entries: Iterable<readonly [PropertyKey, T]>) : Object
    {static} +fromEntries(entries: Iterable<readonly any[]>) : any
    {static} +getOwnPropertyDescriptor(o: any, p: PropertyKey) : PropertyDescriptor
    {static} +getOwnPropertyDescriptors<T>(o: T) : { [P in string | number | symbol]: TypedPropertyDescriptor<T[P]> } & Object
    {static} +getOwnPropertyNames(o: any) : string[]
    {static} +getOwnPropertySymbols(o: any) : symbol[]
    {static} +getPrototypeOf(o: any) : any
    +hasOwnProperty(v: PropertyKey) : boolean
    {static} +initStats() : void
    {static} +is(value1: any, value2: any) : boolean
    {static} +isExtensible(o: any) : boolean
    {static} +isFrozen(o: any) : boolean
    +isPrototypeOf(v: Object) : boolean
    {static} +isSealed(o: any) : boolean
    {static} +keys(o: object) : string[]
    {static} +keys(o: Object) : string[]
    {static} +log(key: string, data: any) : void
    {static} +preventExtensions<T>(o: T) : T
    +propertyIsEnumerable(v: PropertyKey) : boolean
    {static} +render() : void
    {static} +seal<T>(o: T) : T
    {static} +setPrototypeOf(o: any, proto: object) : any
    +toLocaleString() : string
    +toString() : string
    {static} +updateFPS(fps: number) : void
    {static} +updateSGStats() : void
    +valueOf() : Object
    {static} +values<T>(o: Object | ArrayLike<T>) : T[]
    {static} +values(o: Object) : any[]
}
class "Object"
hide "Object" circle
"Object" <|- - "Stats"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 11:46:50 EST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>