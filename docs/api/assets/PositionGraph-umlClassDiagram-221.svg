<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="578px" preserveAspectRatio="none" style="width:512px;height:578px;background:#00000000;" version="1.1" viewBox="0 0 512 578" width="512px" zoomAndPan="magnify"><defs><filter height="300%" id="f1abrluit0c4q4" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[0461493972edc2eae6aadcaef93917de]
class PositionGraph--><rect codeLine="6" fill="#FEFECE" filter="url(#f1abrluit0c4q4)" height="281.1914" id="PositionGraph" style="stroke:#FF0000;stroke-width:1.5;" width="313" x="141.5" y="283"/><ellipse cx="253.75" cy="299" fill="#ADD1B2" rx="11" ry="11" style="stroke:#FF0000;stroke-width:1.0;"/><path d="M256.2231,305.1431 Q255.6421,305.4419 255.0029,305.5913 Q254.3638,305.7407 253.6582,305.7407 Q251.1514,305.7407 249.8315,304.0889 Q248.5117,302.437 248.5117,299.3159 Q248.5117,296.1865 249.8315,294.5347 Q251.1514,292.8828 253.6582,292.8828 Q254.3638,292.8828 255.0112,293.0322 Q255.6587,293.1816 256.2231,293.4805 L256.2231,296.2031 Q255.5923,295.6221 254.9988,295.3523 Q254.4053,295.0825 253.7744,295.0825 Q252.4297,295.0825 251.7449,296.1492 Q251.0601,297.2158 251.0601,299.3159 Q251.0601,301.4077 251.7449,302.4744 Q252.4297,303.541 253.7744,303.541 Q254.4053,303.541 254.9988,303.2712 Q255.5923,303.0015 256.2231,302.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="80" x="274.25" y="303.5352">PositionGraph</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="142.5" x2="453.5" y1="315" y2="315"/><ellipse cx="152.5" cy="326" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="161.5" y="329.6348">degree : number[]</text><ellipse cx="152.5" cy="338.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="161.5" y="342.5898">directed : boolean</text><ellipse cx="152.5" cy="351.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="161.5" y="355.5449">edges : EdgeNode[]</text><ellipse cx="152.5" cy="364.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="161.5" y="368.5">numEdges : number</text><ellipse cx="152.5" cy="377.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="161.5" y="381.4551">numVertices : number</text><ellipse cx="152.5" cy="390.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="161.5" y="394.4102">positions : Vec2[]</text><ellipse cx="152.5" cy="403.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="161.5" y="407.3652">weighted : boolean</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="142.5" x2="453.5" y1="413.6855" y2="413.6855"/><ellipse cx="152.5" cy="424.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="201" x="161.5" y="428.3203">addEdge(x: number, y: number) : void</text><ellipse cx="152.5" cy="437.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="161.5" y="441.2754">addNode() : number</text><ellipse cx="152.5" cy="450.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="161.5" y="454.2305">addPositionedNode(position: Vec2) : number</text><ellipse cx="152.5" cy="463.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="161.5" y="467.1855">debugRender() : void</text><ellipse cx="152.5" cy="476.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="161.5" y="480.1406">edgeExists(x: number, y: number) : boolean</text><ellipse cx="152.5" cy="489.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="161.5" y="493.0957">getDegree(x: number) : number</text><ellipse cx="152.5" cy="502.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="175" x="161.5" y="506.0508">getEdges(x: number) : EdgeNode</text><ellipse cx="152.5" cy="515.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="161.5" y="519.0059">getNodePosition(index: number) : Vec2</text><ellipse cx="152.5" cy="528.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="161.5" y="531.9609">setNodePosition(index: number, position: Vec2) : void</text><ellipse cx="152.5" cy="541.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="161.5" y="544.916">toString() : string</text><polygon fill="#FFFF44" points="152.5,549.2363,156.5,553.2363,152.5,557.2363,148.5,553.2363" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="161.5" y="557.8711">nodeToString(index: number) : string</text><!--MD5=[706e73df52f3df32f52be1ce9adb217e]
class Graph--><rect codeLine="26" fill="#FEFECE" filter="url(#f1abrluit0c4q4)" height="216.416" id="Graph" style="stroke:#FF0000;stroke-width:1.5;" width="316" x="9" y="7"/><ellipse cx="144.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#FF0000;stroke-width:1.0;"/><path d="M147.2231,29.1431 Q146.6421,29.4419 146.0029,29.5913 Q145.3638,29.7407 144.6582,29.7407 Q142.1514,29.7407 140.8315,28.0889 Q139.5117,26.437 139.5117,23.3159 Q139.5117,20.1865 140.8315,18.5347 Q142.1514,16.8828 144.6582,16.8828 Q145.3638,16.8828 146.0112,17.0322 Q146.6587,17.1816 147.2231,17.4805 L147.2231,20.2031 Q146.5923,19.6221 145.9988,19.3523 Q145.4053,19.0825 144.7744,19.0825 Q143.4297,19.0825 142.7449,20.1492 Q142.0601,21.2158 142.0601,23.3159 Q142.0601,25.4077 142.7449,26.4744 Q143.4297,27.541 144.7744,27.541 Q145.4053,27.541 145.9988,27.2712 Q146.5923,27.0015 147.2231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="36" x="165.25" y="27.5352">Graph</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="10" x2="324" y1="39" y2="39"/><ellipse cx="20" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="29" y="53.6348">degree : number[]</text><ellipse cx="20" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="29" y="66.5898">directed : boolean</text><ellipse cx="20" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="29" y="79.5449">edges : EdgeNode[]</text><ellipse cx="20" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="29" y="92.5">numEdges : number</text><ellipse cx="20" cy="101.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="29" y="105.4551">numVertices : number</text><ellipse cx="20" cy="114.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="29" y="118.4102">weighted : boolean</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="10" x2="324" y1="124.7305" y2="124.7305"/><ellipse cx="20" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="29" y="139.3652">addEdge(x: number, y: number, weight: number) : void</text><ellipse cx="20" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="29" y="152.3203">addNode() : number</text><ellipse cx="20" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="29" y="165.2754">edgeExists(x: number, y: number) : boolean</text><ellipse cx="20" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="29" y="178.2305">getDegree(x: number) : number</text><ellipse cx="20" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="175" x="29" y="191.1855">getEdges(x: number) : EdgeNode</text><ellipse cx="20" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="29" y="204.1406">toString() : string</text><polygon fill="#FFFF44" points="20,208.4609,24,212.4609,20,216.4609,16,212.4609" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="29" y="217.0957">nodeToString(index: number) : string</text><!--MD5=[412067033dd25c37850800261ed04026]
class DebugRenderable--><rect codeLine="42" fill="#FEFECE" filter="url(#f1abrluit0c4q4)" height="52.9551" id="DebugRenderable" style="stroke:#FF0000;stroke-width:1.5;" width="138" x="360" y="88.5"/><ellipse cx="375.45" cy="104.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#FF0000;stroke-width:1.0;"/><path d="M371.8777,100.7651 L371.8777,98.6069 L379.2571,98.6069 L379.2571,100.7651 L376.7918,100.7651 L376.7918,108.8418 L379.2571,108.8418 L379.2571,111 L371.8777,111 L371.8777,108.8418 L374.3431,108.8418 L374.3431,100.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="105" x="389.55" y="109.0352">DebugRenderable</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="361" x2="497" y1="120.5" y2="120.5"/><ellipse cx="371" cy="131.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="380" y="135.1348">debugRender() : void</text><!--MD5=[1c5a24189b0869533cedb34256f8a4cc]
reverse link Graph to PositionGraph--><path codeLine="41" d="M220.84,241.98 C226.59,255.43 232.47,269.17 238.28,282.77 " fill="none" id="Graph-backto-PositionGraph" style="stroke:#FF0000;stroke-width:1.0;"/><polygon fill="none" points="214.24,244.34,212.82,223.2,227.11,238.84,214.24,244.34" style="stroke:#FF0000;stroke-width:1.0;"/><!--MD5=[b51fbd1b94acc6a3cab3e95dd21a3d46]
reverse link DebugRenderable to PositionGraph--><path codeLine="45" d="M410.05,160.34 C396.21,192.71 376.64,238.5 357.72,282.77 " fill="none" id="DebugRenderable-backto-PositionGraph" style="stroke:#FF0000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="403.76,157.24,418.06,141.6,416.63,162.75,403.76,157.24" style="stroke:#FF0000;stroke-width:1.0;"/><!--MD5=[f004941f023bbdbef9c1533252a87a0a]
@startuml
skinparam ClassArrowColor #ff0000
skinparam ClassBorderColor #ff0000
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "PositionGraph" {
    +degree : number[]
    +directed : boolean
    +edges : EdgeNode[]
    +numEdges : number
    +numVertices : number
    +positions : Vec2[]
    +weighted : boolean
    +addEdge(x: number, y: number) : void
    +addNode() : number
    +addPositionedNode(position: Vec2) : number
    +debugRender() : void
    +edgeExists(x: number, y: number) : boolean
    +getDegree(x: number) : number
    +getEdges(x: number) : EdgeNode
    +getNodePosition(index: number) : Vec2
    +setNodePosition(index: number, position: Vec2) : void
    +toString() : string
    #nodeToString(index: number) : string
}
class "Graph" {
    +degree : number[]
    +directed : boolean
    +edges : EdgeNode[]
    +numEdges : number
    +numVertices : number
    +weighted : boolean
    +addEdge(x: number, y: number, weight: number) : void
    +addNode() : number
    +edgeExists(x: number, y: number) : boolean
    +getDegree(x: number) : number
    +getEdges(x: number) : EdgeNode
    +toString() : string
    #nodeToString(index: number) : string
}
"Graph" <|- - "PositionGraph"
interface "DebugRenderable" {
    +debugRender() : void
}
"DebugRenderable" <|.. "PositionGraph"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 11:46:50 EST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>