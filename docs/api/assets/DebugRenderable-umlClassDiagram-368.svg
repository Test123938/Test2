<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="920px" preserveAspectRatio="none" style="width:933px;height:920px;background:#00000000;" version="1.1" viewBox="0 0 933 920" width="933px" zoomAndPan="magnify"><defs><filter height="300%" id="f1svhibbmr62nj" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[412067033dd25c37850800261ed04026]
class DebugRenderable--><rect codeLine="6" fill="#FEFECE" filter="url(#f1svhibbmr62nj)" height="52.9551" id="DebugRenderable" style="stroke:#FF0000;stroke-width:1.5;" width="138" x="457" y="7"/><ellipse cx="472.45" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#FF0000;stroke-width:1.0;"/><path d="M468.8777,19.2651 L468.8777,17.1069 L476.2571,17.1069 L476.2571,19.2651 L473.7918,19.2651 L473.7918,27.3418 L476.2571,27.3418 L476.2571,29.5 L468.8777,29.5 L468.8777,27.3418 L471.3431,27.3418 L471.3431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="105" x="486.55" y="27.5352">DebugRenderable</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="458" x2="594" y1="39" y2="39"/><ellipse cx="468" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="477" y="53.6348">debugRender() : void</text><!--MD5=[372f7354164cd38fc5cfe01cbfd4962a]
class GameNode--><rect codeLine="9" fill="#FEFECE" filter="url(#f1svhibbmr62nj)" height="786.4395" id="GameNode" style="stroke:#FF0000;stroke-width:1.5;" width="562" x="9" y="120"/><ellipse cx="253.25" cy="136" fill="#A9DCDF" rx="11" ry="11" style="stroke:#FF0000;stroke-width:1.0;"/><path d="M253.1133,131.3481 L251.9595,136.4199 L254.2754,136.4199 Z M251.6191,129.1069 L254.6157,129.1069 L257.9609,141.5 L255.5122,141.5 L254.7485,138.437 L251.4697,138.437 L250.7227,141.5 L248.2739,141.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="65" x="273.75" y="140.5352">GameNode</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="10" x2="570" y1="152" y2="152"/><ellipse cx="20" cy="163" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="83" x="29" y="166.6348">active : boolean</text><ellipse cx="20" cy="175.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="29" y="179.5898">aiActive : boolean</text><ellipse cx="20" cy="188.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="29" y="192.5449">collidedWithTilemap : boolean</text><ellipse cx="20" cy="201.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="29" y="205.5">colliderOffset : Vec2</text><ellipse cx="20" cy="214.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="29" y="218.4551">collisionShape : Shape</text><ellipse cx="20" cy="227.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="29" y="231.4102">frozen : boolean</text><ellipse cx="20" cy="240.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="29" y="244.3652">group : number</text><ellipse cx="20" cy="253.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="29" y="257.3203">hasPhysics : boolean</text><ellipse cx="20" cy="266.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="29" y="270.2754">isCollidable : boolean</text><ellipse cx="20" cy="279.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="29" y="283.2305">isColliding : boolean</text><ellipse cx="20" cy="292.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="29" y="296.1855">isPlayer : boolean</text><ellipse cx="20" cy="305.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="29" y="309.1406">isStatic : boolean</text><ellipse cx="20" cy="318.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="29" y="322.0957">isTrigger : boolean</text><ellipse cx="20" cy="331.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="29" y="335.0508">moving : boolean</text><ellipse cx="20" cy="344.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="29" y="348.0059">onCeiling : boolean</text><ellipse cx="20" cy="357.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="29" y="360.9609">onGround : boolean</text><ellipse cx="20" cy="370.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="29" y="373.916">onWall : boolean</text><ellipse cx="20" cy="383.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="29" y="386.8711">path : NavigationPath</text><ellipse cx="20" cy="396.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="29" y="399.8262">pathfinding : boolean</text><ellipse cx="20" cy="409.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="29" y="412.7813">rotation : number</text><ellipse cx="20" cy="422.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="29" y="425.7363">sweptRect : AABB</text><ellipse cx="20" cy="435.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="29" y="438.6914">triggerEnters : string[]</text><ellipse cx="20" cy="448.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="29" y="451.6465">triggerExits : string[]</text><ellipse cx="20" cy="460.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="29" y="464.6016">triggerMask : number</text><ellipse cx="20" cy="473.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="29" y="477.5566">tweens : TweenController</text><ellipse cx="20" cy="486.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="29" y="490.5117">_ai : AI | GoapAI</text><ellipse cx="20" cy="499.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="29" y="503.4668">_velocity : Vec2</text><polygon fill="none" points="20,507.7871,24,511.7871,20,515.7871,16,511.7871" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="29" y="516.4219">emitter : Emitter</text><polygon fill="none" points="20,520.7422,24,524.7422,20,528.7422,16,524.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="29" y="529.377">layer : Layer</text><polygon fill="none" points="20,533.6973,24,537.6973,20,541.6973,16,537.6973" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="29" y="542.332">receiver : Receiver</text><polygon fill="none" points="20,546.6523,24,550.6523,20,554.6523,16,550.6523" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="29" y="555.2871">scene : Scene</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="561.6074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="29" y="568.2422">_id : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="574.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="29" y="581.1973">_position : Vec2</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="10" x2="570" y1="587.5176" y2="587.5176"/><ellipse cx="20" cy="598.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="443" x="29" y="602.1523">addAI&lt;T&gt;(ai: string | Function, options: Record&lt;string, any&gt;, type: number) : void</text><ellipse cx="20" cy="611.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="536" x="29" y="615.1074">addPhysics(collisionShape: Shape, colliderOffset: Vec2, isCollidable: boolean, isStatic: boolean) : void</text><ellipse cx="20" cy="624.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="29" y="628.0625">debugRender() : void</text><ellipse cx="20" cy="637.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="81" x="29" y="641.0176">destroy() : void</text><ellipse cx="20" cy="650.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="29" y="653.9727">disablePhysics() : void</text><ellipse cx="20" cy="663.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="29" y="666.9277">enablePhysics() : void</text><ellipse cx="20" cy="676.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="29" y="679.8828">finishMove() : void</text><ellipse cx="20" cy="689.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="29" y="692.8379">freeze() : void</text><ellipse cx="20" cy="702.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="29" y="705.793">getLastVelocity() : Vec2</text><ellipse cx="20" cy="715.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="29" y="718.748">getLayer() : Layer</text><ellipse cx="20" cy="728.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="29" y="731.7031">getScene() : Scene</text><ellipse cx="20" cy="741.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="29" y="744.6582">inRelativeCoordinates(point: Vec2) : Vec2</text><ellipse cx="20" cy="753.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="29" y="757.6133">move(velocity: Vec2) : void</text><ellipse cx="20" cy="766.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="29" y="770.5684">moveOnPath(speed: number, path: NavigationPath) : void</text><ellipse cx="20" cy="779.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="29" y="783.5234">removePhysics() : void</text><ellipse cx="20" cy="792.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="29" y="796.4785">setAIActive(active: boolean, options: Record&lt;string, any&gt;) : void</text><ellipse cx="20" cy="805.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="29" y="809.4336">setCollisionShape(collider: Shape) : void</text><ellipse cx="20" cy="818.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="29" y="822.3887">setGroup(group: string) : void</text><ellipse cx="20" cy="831.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="29" y="835.3438">setLayer(layer: Layer) : void</text><ellipse cx="20" cy="844.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="848.2988">setScene(scene: Scene) : void</text><ellipse cx="20" cy="857.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="29" y="861.2539">setTrigger(group: string, onEnter: string, onExit: string) : void</text><ellipse cx="20" cy="870.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="29" y="874.209">unfreeze() : void</text><ellipse cx="20" cy="883.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="29" y="887.1641">update(deltaT: number) : void</text><polygon fill="#FFFF44" points="20,891.4844,24,895.4844,20,899.4844,16,895.4844" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="29" y="900.1191">positionChanged() : void</text><!--MD5=[0461493972edc2eae6aadcaef93917de]
class PositionGraph--><rect codeLine="69" fill="#FEFECE" filter="url(#f1svhibbmr62nj)" height="281.1914" id="PositionGraph" style="stroke:#FF0000;stroke-width:1.5;" width="313" x="606.5" y="372.5"/><ellipse cx="718.75" cy="388.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#FF0000;stroke-width:1.0;"/><path d="M721.2231,394.6431 Q720.6421,394.9419 720.0029,395.0913 Q719.3638,395.2407 718.6582,395.2407 Q716.1514,395.2407 714.8315,393.5889 Q713.5117,391.937 713.5117,388.8159 Q713.5117,385.6865 714.8315,384.0347 Q716.1514,382.3828 718.6582,382.3828 Q719.3638,382.3828 720.0112,382.5322 Q720.6587,382.6816 721.2231,382.9805 L721.2231,385.7031 Q720.5923,385.1221 719.9988,384.8523 Q719.4053,384.5825 718.7744,384.5825 Q717.4297,384.5825 716.7449,385.6492 Q716.0601,386.7158 716.0601,388.8159 Q716.0601,390.9077 716.7449,391.9744 Q717.4297,393.041 718.7744,393.041 Q719.4053,393.041 719.9988,392.7712 Q720.5923,392.5015 721.2231,391.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="80" x="739.25" y="393.0352">PositionGraph</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="607.5" x2="918.5" y1="404.5" y2="404.5"/><ellipse cx="617.5" cy="415.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="626.5" y="419.1348">degree : number[]</text><ellipse cx="617.5" cy="428.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="626.5" y="432.0898">directed : boolean</text><ellipse cx="617.5" cy="441.4102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="626.5" y="445.0449">edges : EdgeNode[]</text><ellipse cx="617.5" cy="454.3652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="626.5" y="458">numEdges : number</text><ellipse cx="617.5" cy="467.3203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="626.5" y="470.9551">numVertices : number</text><ellipse cx="617.5" cy="480.2754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="626.5" y="483.9102">positions : Vec2[]</text><ellipse cx="617.5" cy="493.2305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="626.5" y="496.8652">weighted : boolean</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="607.5" x2="918.5" y1="503.1855" y2="503.1855"/><ellipse cx="617.5" cy="514.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="201" x="626.5" y="517.8203">addEdge(x: number, y: number) : void</text><ellipse cx="617.5" cy="527.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="626.5" y="530.7754">addNode() : number</text><ellipse cx="617.5" cy="540.0957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="626.5" y="543.7305">addPositionedNode(position: Vec2) : number</text><ellipse cx="617.5" cy="553.0508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="626.5" y="556.6855">debugRender() : void</text><ellipse cx="617.5" cy="566.0059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="626.5" y="569.6406">edgeExists(x: number, y: number) : boolean</text><ellipse cx="617.5" cy="578.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="626.5" y="582.5957">getDegree(x: number) : number</text><ellipse cx="617.5" cy="591.916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="175" x="626.5" y="595.5508">getEdges(x: number) : EdgeNode</text><ellipse cx="617.5" cy="604.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="626.5" y="608.5059">getNodePosition(index: number) : Vec2</text><ellipse cx="617.5" cy="617.8262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="626.5" y="621.4609">setNodePosition(index: number, position: Vec2) : void</text><ellipse cx="617.5" cy="630.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="626.5" y="634.416">toString() : string</text><polygon fill="#FFFF44" points="617.5,638.7363,621.5,642.7363,617.5,646.7363,613.5,642.7363" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="626.5" y="647.3711">nodeToString(index: number) : string</text><!--MD5=[f00aaf58760a6f305a1b952cdae1bbc3]
reverse link DebugRenderable to GameNode--><path codeLine="68" d="M504.38,78.25 C498.48,90.18 491.58,104.14 483.95,119.58 " fill="none" id="DebugRenderable-backto-GameNode" style="stroke:#FF0000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="498.17,75,513.31,60.17,510.73,81.2,498.17,75" style="stroke:#FF0000;stroke-width:1.0;"/><!--MD5=[b51fbd1b94acc6a3cab3e95dd21a3d46]
reverse link DebugRenderable to PositionGraph--><path codeLine="89" d="M559.45,76.09 C569.6,89.67 580.34,105.09 589,120 C635.76,200.47 678.34,295.82 709.68,372.33 " fill="none" id="DebugRenderable-backto-PositionGraph" style="stroke:#FF0000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="553.77,80.18,547.12,60.06,564.87,71.65,553.77,80.18" style="stroke:#FF0000;stroke-width:1.0;"/><!--MD5=[3f52e481c42d61e19315cf5d0d0dc2e7]
@startuml
skinparam ClassArrowColor #ff0000
skinparam ClassBorderColor #ff0000
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
interface "DebugRenderable" {
    +debugRender() : void
}
abstract class "GameNode" {
    +active : boolean
    +aiActive : boolean
    +collidedWithTilemap : boolean
    +colliderOffset : Vec2
    +collisionShape : Shape
    +frozen : boolean
    +group : number
    +hasPhysics : boolean
    +isCollidable : boolean
    +isColliding : boolean
    +isPlayer : boolean
    +isStatic : boolean
    +isTrigger : boolean
    +moving : boolean
    +onCeiling : boolean
    +onGround : boolean
    +onWall : boolean
    +path : NavigationPath
    +pathfinding : boolean
    +rotation : number
    +sweptRect : AABB
    +triggerEnters : string[]
    +triggerExits : string[]
    +triggerMask : number
    +tweens : TweenController
    +_ai : AI | GoapAI
    +_velocity : Vec2
    #emitter : Emitter
    #layer : Layer
    #receiver : Receiver
    #scene : Scene
    -_id : number
    -_position : Vec2
    +addAI<T>(ai: string | Function, options: Record<string, any>, type: number) : void
    +addPhysics(collisionShape: Shape, colliderOffset: Vec2, isCollidable: boolean, isStatic: boolean) : void
    +debugRender() : void
    +destroy() : void
    +disablePhysics() : void
    +enablePhysics() : void
    +finishMove() : void
    +freeze() : void
    +getLastVelocity() : Vec2
    +getLayer() : Layer
    +getScene() : Scene
    +inRelativeCoordinates(point: Vec2) : Vec2
    +move(velocity: Vec2) : void
    +moveOnPath(speed: number, path: NavigationPath) : void
    +removePhysics() : void
    +setAIActive(active: boolean, options: Record<string, any>) : void
    +setCollisionShape(collider: Shape) : void
    +setGroup(group: string) : void
    +setLayer(layer: Layer) : void
    +setScene(scene: Scene) : void
    +setTrigger(group: string, onEnter: string, onExit: string) : void
    +unfreeze() : void
    +update(deltaT: number) : void
    #positionChanged() : void
}
"DebugRenderable" <|.. "GameNode"
class "PositionGraph" {
    +degree : number[]
    +directed : boolean
    +edges : EdgeNode[]
    +numEdges : number
    +numVertices : number
    +positions : Vec2[]
    +weighted : boolean
    +addEdge(x: number, y: number) : void
    +addNode() : number
    +addPositionedNode(position: Vec2) : number
    +debugRender() : void
    +edgeExists(x: number, y: number) : boolean
    +getDegree(x: number) : number
    +getEdges(x: number) : EdgeNode
    +getNodePosition(index: number) : Vec2
    +setNodePosition(index: number, position: Vec2) : void
    +toString() : string
    #nodeToString(index: number) : string
}
"DebugRenderable" <|.. "PositionGraph"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 11:46:50 EST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>