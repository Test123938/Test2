<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="782px" preserveAspectRatio="none" style="width:628px;height:782px;background:#00000000;" version="1.1" viewBox="0 0 628 782" width="628px" zoomAndPan="magnify"><defs><filter height="300%" id="fe6ii54b97m1j" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[3abbef31bc9427b4087bd9c2520646fd]
class Registry<T>--><rect codeLine="6" fill="#FEFECE" filter="url(#fe6ii54b97m1j)" height="195.4609" id="Registry&lt;T&gt;" style="stroke:#FF0000;stroke-width:1.5;" width="304" x="158.5" y="245"/><ellipse cx="269.25" cy="261" fill="#A9DCDF" rx="11" ry="11" style="stroke:#FF0000;stroke-width:1.0;"/><path d="M269.1133,256.3481 L267.9595,261.4199 L270.2754,261.4199 Z M267.6191,254.1069 L270.6157,254.1069 L273.9609,266.5 L271.5122,266.5 L270.7485,263.437 L267.4697,263.437 L266.7227,266.5 L264.2739,266.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="74" x="289.75" y="265.5352">Registry&lt;T&gt;</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="159.5" x2="461.5" y1="277" y2="277"/><ellipse cx="169.5" cy="288" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="178.5" y="291.6348">add(key: string, value: T) : void</text><ellipse cx="169.5" cy="300.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="178.5" y="304.5898">clear() : void</text><ellipse cx="169.5" cy="313.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="178.5" y="317.5449">delete(key: string) : void</text><ellipse cx="169.5" cy="326.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="178.5" y="330.5">forEach(func: Function) : void</text><ellipse cx="169.5" cy="339.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="178.5" y="343.4551">get(key: string) : T</text><ellipse cx="169.5" cy="352.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="178.5" y="356.4102">has(key: string) : boolean</text><ellipse cx="169.5" cy="365.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="81" x="178.5" y="369.3652">keys() : string[]</text><ellipse cx="169.5" cy="378.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="81" x="178.5" y="382.3203">preload() : void</text><ellipse cx="169.5" cy="391.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="278" x="178.5" y="395.2754">registerAndPreloadItem(key: string, args: any) : void</text><ellipse cx="169.5" cy="404.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="216" x="178.5" y="408.2305">registerItem(key: string, args: any) : void</text><ellipse cx="169.5" cy="417.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="178.5" y="421.1855">set(key: string, value: T) : void</text><ellipse cx="169.5" cy="430.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="178.5" y="434.1406">toString() : string</text><!--MD5=[8e786d5ad0a1f26ce02b3732d670e3a1]
class Map<T>--><rect codeLine="20" fill="#FEFECE" filter="url(#fe6ii54b97m1j)" height="177.5508" id="Map&lt;T&gt;" style="stroke:#FF0000;stroke-width:1.5;" width="189" x="216" y="7"/><ellipse cx="279.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#FF0000;stroke-width:1.0;"/><path d="M282.2231,29.1431 Q281.6421,29.4419 281.0029,29.5913 Q280.3638,29.7407 279.6582,29.7407 Q277.1514,29.7407 275.8315,28.0889 Q274.5117,26.437 274.5117,23.3159 Q274.5117,20.1865 275.8315,18.5347 Q277.1514,16.8828 279.6582,16.8828 Q280.3638,16.8828 281.0112,17.0322 Q281.6587,17.1816 282.2231,17.4805 L282.2231,20.2031 Q281.5923,19.6221 280.9988,19.3523 Q280.4053,19.0825 279.7744,19.0825 Q278.4297,19.0825 277.7449,20.1492 Q277.0601,21.2158 277.0601,23.3159 Q277.0601,25.4077 277.7449,26.4744 Q278.4297,27.541 279.7744,27.541 Q280.4053,27.541 280.9988,27.2712 Q281.5923,27.0015 282.2231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="53" x="300.25" y="27.5352">Map&lt;T&gt;</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="217" x2="404" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="224" y="47"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="236" y="53.6348">map : Record&lt;string, T&gt;</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="217" x2="404" y1="59.9551" y2="59.9551"/><ellipse cx="227" cy="70.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="236" y="74.5898">add(key: string, value: T) : void</text><ellipse cx="227" cy="83.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="236" y="87.5449">clear() : void</text><ellipse cx="227" cy="96.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="236" y="100.5">delete(key: string) : void</text><ellipse cx="227" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="236" y="113.4551">forEach(func: Function) : void</text><ellipse cx="227" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="236" y="126.4102">get(key: string) : T</text><ellipse cx="227" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="236" y="139.3652">has(key: string) : boolean</text><ellipse cx="227" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="81" x="236" y="152.3203">keys() : string[]</text><ellipse cx="227" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="236" y="165.2754">set(key: string, value: T) : void</text><ellipse cx="227" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="236" y="178.2305">toString() : string</text><!--MD5=[bc0008100b09d00eabbab68c5031d12a]
class ShaderRegistry--><rect codeLine="33" fill="#FEFECE" filter="url(#fe6ii54b97m1j)" height="268.2363" id="ShaderRegistry" style="stroke:#FF0000;stroke-width:1.5;" width="607" x="7" y="500"/><ellipse cx="263.25" cy="516" fill="#ADD1B2" rx="11" ry="11" style="stroke:#FF0000;stroke-width:1.0;"/><path d="M265.7231,522.1431 Q265.1421,522.4419 264.5029,522.5913 Q263.8638,522.7407 263.1582,522.7407 Q260.6514,522.7407 259.3315,521.0889 Q258.0117,519.437 258.0117,516.3159 Q258.0117,513.1865 259.3315,511.5347 Q260.6514,509.8828 263.1582,509.8828 Q263.8638,509.8828 264.5112,510.0322 Q265.1587,510.1816 265.7231,510.4805 L265.7231,513.2031 Q265.0923,512.6221 264.4988,512.3523 Q263.9053,512.0825 263.2744,512.0825 Q261.9297,512.0825 261.2449,513.1492 Q260.5601,514.2158 260.5601,516.3159 Q260.5601,518.4077 261.2449,519.4744 Q261.9297,520.541 263.2744,520.541 Q263.9053,520.541 264.4988,520.2712 Q265.0923,520.0015 265.7231,519.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="86" x="283.75" y="520.5352">ShaderRegistry</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="8" x2="613" y1="532" y2="532"/><ellipse cx="18" cy="543" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="122" x="27" y="546.6348">LABEL_SHADER : string</text><ellipse cx="18" cy="555.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="123" x="27" y="559.5898">POINT_SHADER : string</text><ellipse cx="18" cy="568.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="118" x="27" y="572.5449">RECT_SHADER : string</text><ellipse cx="18" cy="581.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="125" x="27" y="585.5">SPRITE_SHADER : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="591.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="27" y="598.4551">registryItems : ShaderRegistryItem[]</text><line style="stroke:#FF0000;stroke-width:1.5;" x1="8" x2="613" y1="604.7754" y2="604.7754"/><ellipse cx="18" cy="615.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="619.4102">add(key: string, value: ShaderType) : void</text><ellipse cx="18" cy="628.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="27" y="632.3652">clear() : void</text><ellipse cx="18" cy="641.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="27" y="645.3203">delete(key: string) : void</text><ellipse cx="18" cy="654.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="658.2754">forEach(func: Function) : void</text><ellipse cx="18" cy="667.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="671.2305">get(key: string) : ShaderType</text><ellipse cx="18" cy="680.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="27" y="684.1855">has(key: string) : boolean</text><ellipse cx="18" cy="693.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="81" x="27" y="697.1406">keys() : string[]</text><ellipse cx="18" cy="706.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="81" x="27" y="710.0957">preload() : void</text><ellipse cx="18" cy="719.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="581" x="27" y="723.0508">registerAndPreloadItem(key: string, constr: Function, vshaderLocation: string, fshaderLocation: string) : void</text><ellipse cx="18" cy="732.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="27" y="736.0059">registerItem(key: string, constr: Function) : void</text><ellipse cx="18" cy="745.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="27" y="748.9609">set(key: string, value: ShaderType) : void</text><ellipse cx="18" cy="758.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="27" y="761.916">toString() : string</text><!--MD5=[3f1db7996de34e34ad53c7b52ff3c2fd]
reverse link Map<T> to Registry<T>--><path codeLine="32" d="M310.5,205.51 C310.5,218.55 310.5,231.81 310.5,244.67 " fill="none" id="Map&lt;T&gt;-backto-Registry&lt;T&gt;" style="stroke:#FF0000;stroke-width:1.0;"/><polygon fill="none" points="303.5,205.27,310.5,185.27,317.5,205.27,303.5,205.27" style="stroke:#FF0000;stroke-width:1.0;"/><!--MD5=[410b1d715fcc40c87652d76dda7224aa]
reverse link Registry<T> to ShaderRegistry--><path codeLine="52" d="M310.5,460.43 C310.5,473.45 310.5,486.78 310.5,499.97 " fill="none" id="Registry&lt;T&gt;-backto-ShaderRegistry" style="stroke:#FF0000;stroke-width:1.0;"/><polygon fill="none" points="303.5,460.3,310.5,440.3,317.5,460.3,303.5,460.3" style="stroke:#FF0000;stroke-width:1.0;"/><!--MD5=[34f522d83361c662b2c07a2d8d973348]
@startuml
skinparam ClassArrowColor #ff0000
skinparam ClassBorderColor #ff0000
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
abstract class "Registry<T>" {
    +add(key: string, value: T) : void
    +clear() : void
    +delete(key: string) : void
    +forEach(func: Function) : void
    +get(key: string) : T
    +has(key: string) : boolean
    +keys() : string[]
    {abstract} +preload() : void
    {abstract} +registerAndPreloadItem(key: string, args: any) : void
    {abstract} +registerItem(key: string, args: any) : void
    +set(key: string, value: T) : void
    +toString() : string
}
class "Map<T>" {
    -map : Record<string, T>
    +add(key: string, value: T) : void
    +clear() : void
    +delete(key: string) : void
    +forEach(func: Function) : void
    +get(key: string) : T
    +has(key: string) : boolean
    +keys() : string[]
    +set(key: string, value: T) : void
    +toString() : string
}
"Map<T>" <|- - "Registry<T>"
class "ShaderRegistry" {
    {static} +LABEL_SHADER : string
    {static} +POINT_SHADER : string
    {static} +RECT_SHADER : string
    {static} +SPRITE_SHADER : string
    -registryItems : ShaderRegistryItem[]
    +add(key: string, value: ShaderType) : void
    +clear() : void
    +delete(key: string) : void
    +forEach(func: Function) : void
    +get(key: string) : ShaderType
    +has(key: string) : boolean
    +keys() : string[]
    +preload() : void
    +registerAndPreloadItem(key: string, constr: Function, vshaderLocation: string, fshaderLocation: string) : void
    +registerItem(key: string, constr: Function) : void
    +set(key: string, value: ShaderType) : void
    +toString() : string
}
"Registry<T>" <|- - "ShaderRegistry"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 11:46:50 EST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>